{"version":3,"sources":["store/inputData.js","store/chartData.js","store/utils/thunkCreators.js","components/InputWater/InputWater.js","store/index.js","components/Chart/Column.js","components/Chart/Row.js","components/Chart/Chart.js","components/Explain/Explain.js","Container.js","App.js","reportWebVitals.js","index.js"],"names":["SET_ARRAY","SET_MIN","SET_MAX","SET_RESULT","SET_DIST","reducer","state","action","type","distance","array","minNum","min","maxNum","max","result","res","GET_MIN_Y","GET_MAX_Y","GET_MAX_X","maxX","maxY","minY","setArrayChart","dispatch","setArray","setMinMaxArrayChart","Number","MAX_SAFE_INTEGER","forEach","i","Math","getMinChart","getMaxChart","getMaxX","length","leetcode","height","MIN_SAFE_INTEGER","hi","lo","temp","setMin","setMax","setDistance","connect","useState","val","setVal","invalid","setInvalid","split","useRef","string","a","trim","map","onSubmit","e","preventDefault","value","onChange","word","target","match","replace","name","rootReducer","combineReducers","chart","chartData","input","inputData","createStore","compose","applyMiddleware","thunkMiddleware","logger","Column","arrayY","setArrayY","useMinMax","setUseMinMax","useEffect","console","log","mapY","columnList","int","className","minMax","Row","maxResult","minResult","arrayX","setArrayX","mapX","rowList","heightItem","style","backgroundColor","total","Explain","App","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1579eda.chunk.js","sourcesContent":["// Actions\nconst SET_ARRAY = \"SET_ARRAY\";\nconst SET_MIN = \"SET_MIN\";\nconst SET_MAX = \"SET_MAX\";\nconst SET_RESULT = \"SET_RESULT\";\nconst SET_DIST = \"SET_DIST\";\n\n// Action Creators\nexport const setArray = (array) => {\n  return {\n    type: SET_ARRAY,\n    array,\n  }\n}\n\nexport const setDistance = (distance) => {\n  return {\n    type: SET_DIST,\n    distance,\n  }\n}\n\nexport const setMin = (min) => {\n  return {\n    type: SET_MIN,\n    min,\n  }\n}\n\nexport const setMax = (max) => {\n  return {\n    type: SET_MAX,\n    max,\n  }\n}\n\n\nexport const setResult = (res) => {\n  return {\n    type: SET_RESULT,\n    res,\n  }\n}\n\n// Reducer\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case SET_DIST: {\n      return {\n        ...state,\n        distance: action.distance\n      }\n    }\n    case SET_ARRAY:\n      return {\n        ...state,\n        array: action.array\n      }\n    case SET_MIN:\n      return {\n        ...state,\n        minNum: action.min\n      }\n    case SET_MAX:\n      return {\n        ...state,\n        maxNum: action.max\n      }\n    case SET_RESULT:\n      return {\n        ...state,\n        result: action.res\n      }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","// Actions\nconst GET_MIN_Y = \"GET_MIN_Y\";\nconst GET_MAX_Y = \"GET_MAX_Y\";\nconst GET_MAX_X = \"GET_MAX_X\";\n\n// Action Creators\nexport const getMinChart = (min) => {\n  return {\n    type: GET_MIN_Y,\n    min,\n  }\n}\n\nexport const getMaxChart = (max) => {\n  return {\n    type: GET_MAX_Y,\n    max,\n  }\n}\n\nexport const getMaxX = (max) => {\n  return {\n    type: GET_MAX_X,\n    max,\n  }\n}\n\n// Reducer\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case GET_MAX_X:\n      return { \n        ...state,\n        maxX: action.max\n      }\n    case GET_MAX_Y:\n      return {\n        ...state,\n        maxY: action.max,\n      }\n    case GET_MIN_Y:\n      return {\n        ...state,\n        minY: action.min\n      }\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","import {setArray, setMin, setMax, setResult, setDistance} from '../inputData';\nimport {getMinChart, getMaxChart, getMaxX} from '../chartData';\n\nexport const setArrayChart = (array) => (dispatch) => {\n  dispatch(setArray(array));\n}\n\nexport const setMinMaxArrayChart = (array) => (dispatch) => {\n  let max = 0;\n  let min = Number.MAX_SAFE_INTEGER;\n\n  array.forEach((i) => {\n    max = Math.max(max, i);\n    min = Math.min(min, i);\n  });\n  dispatch(getMinChart(min));\n  dispatch(getMaxChart(max));\n  dispatch(getMaxX(array.length - 1));\n}\n\nexport const leetcode = (height) => (dispatch) => {\n  let max = Number.MIN_SAFE_INTEGER;\n  let hi = height.length - 1;\n  let lo = 0;\n  let minNum = -1;\n  let maxNum = -1;\n  let distance = 0;\n  \n  while (lo < hi) {\n    let min = Math.min(height[lo], height[hi]);\n    if (max < min * (hi - lo)) {\n      max = min * (hi - lo);\n      minNum = lo;\n      maxNum = hi;\n      distance = hi - lo;\n    }\n    if (height[lo] > height[hi]) {\n      hi--;\n    } else {\n      lo++;\n    }\n  }\n  if (height[minNum] > height[maxNum]) {\n    let temp = minNum\n    minNum = maxNum;\n    maxNum = temp;\n  }\n  dispatch(setMin(minNum));\n  dispatch(setMax(maxNum));\n  dispatch(setDistance(distance));\n  dispatch(setResult(max));\n}","import {useState, useRef} from \"react\";\nimport { connect } from \"react-redux\";\nimport { setArrayChart, setMinMaxArrayChart } from \"../../store/utils/thunkCreators\";\n\nconst InputWater = ({setMinMaxArrayChart, setArrayChart, leetcode}) => {\n  const [val, setVal] = useState('');\n  const [arr, setArr] = useState([]);\n  const [invalid, setInvalid] = useState(false);\n  const arrRef = useRef([]);\n\n  const split = async (string) => {\n    const array = string.trim().split(' ').map(Number);\n    return array;\n  }\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const array = await split(val);\n    setArrayChart(array);\n    setMinMaxArrayChart(array);\n  }\n\n  const change = (word) => {\n    if (!word.match(/^$|^[\\d\\s]+$/)) {\n      setInvalid(true);\n    } else {\n      setInvalid(false);\n      setVal(word.replace(/\\s\\s+/, \" \"));\n    }\n  }\n  \n  return (<>\n  {invalid && <label>Invalid input!</label>}\n  <form onSubmit={e => onSubmit(e)}>\n    <input value={val} onChange={e => change(e.target.value)} name=\"array\" aria-label=\"input-water\"/>\n    <input type=\"submit\"/>\n  </form>\n  </>)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setMinMaxArrayChart: (array) => {\n      dispatch(setMinMaxArrayChart(array));\n    },\n    setArrayChart: (array) => {\n      dispatch(setArrayChart(array));\n    },\n  }\n}\n\nexport default connect(\n  null, mapDispatchToProps\n)(InputWater);","import { compose, createStore, applyMiddleware, combineReducers } from \"redux\";\nimport logger from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\n\nimport chartData from \"./chartData\";\nimport inputData from \"./inputData\";\n\nconst rootReducer = combineReducers({\n  chart: chartData,\n  input: inputData,\n});\n\nexport default createStore(\n  rootReducer,\n  compose(applyMiddleware(thunkMiddleware, logger))\n);","import { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\n\n\n\nexport default function Column({minY, maxY}) {\n  const [arrayY, setArrayY] = useState([]);\n  const [useMinMax, setUseMinMax] = useState(false);\n\n  const mapY = (minY, maxY) => {\n    console.log(minY);\n    for (let i = maxY; i >= minY; i--) {\n      setArrayY(arrayY => [...arrayY, i]);\n    }\n  }\n  \n  useEffect(() => {\n    setArrayY([]);\n    mapY(minY, maxY);\n  }, [minY, maxY]);\n\n  useEffect(() => {\n    console.log(arrayY.length);\n    if (arrayY.length > 27) {\n      setUseMinMax(true);\n    } else {\n      setUseMinMax(false);\n    }\n  }, [arrayY]);\n\n  const columnList = (\n    arrayY.map((int) => {\n      return (\n      <>\n      <li className=\"col-item\">\n        {int}\n      </li>\n      </>\n      )\n    })\n  )\n\n  const minMax = (\n    <>\n    <li className=\"col-item\">\n        {maxY}\n      </li>\n    <li className=\"col-item\">\n        {minY}\n    </li>\n    </>\n  )\n\n  return (\n  <>\n  <div>\n  <ul className=\"min-max\">\n    {useMinMax ? minMax : columnList}\n  </ul>\n  </div>\n  </>\n  )\n}","import { useEffect, useState } from \"react\";\n\nexport default function Row({maxX, array, maxY, maxResult, minResult}) {\n  const [arrayX, setArrayX] = useState([])\n\n  const mapX = (maxX) => {\n    for (let i = 0; i <= maxX; i++) {\n      setArrayX(arrayX => [...arrayX, i]);\n    }\n  }\n  \n  useEffect(() => {\n    setArrayX([]);\n    mapX(maxX);\n  }, [maxX]);\n\n  const rowList = (\n    arrayX.map((int) => {\n      const heightItem = (array[int]/maxY) * 500;\n      return ( \n      <>\n      <li>\n        <span className=\"row-item\">\n        {(int === maxResult || int === minResult) ? \n          <div data-height={array[int]} style={{height: `${heightItem}px`, backgroundColor: \"red\"}}>{array[int]}</div> :\n          <div data-height={array[int]} style={{height: `${heightItem}px`}}>{array[int]}</div>\n        }\n\n        {int}\n        </span>\n      </li>\n      </>\n      )\n    })\n  )\n\n  return (\n    <>\n    <div>\n    <ul className=\"row\">\n      {rowList}\n    </ul>\n    </div>\n    </>\n  )\n}","import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Column from \"./Column\";\nimport Row from \"./Row\";\nimport \"./chart.css\";\nimport { leetcode } from \"../../store/utils/thunkCreators\";\n\nconst Chart = ({maxX, maxY, array, minY, leetcode, maxResult, minResult, total}) => {\n\n  useEffect(() => {\n    if (array) {\n      leetcode(array);\n    }\n  }, [array])\n\n  return (\n  <div className=\"chart-container\">\n    <div className=\"min-max\">\n      <Column minY={minY} maxY={maxY}/>\n    </div>\n    <Row maxX={maxX} maxY={maxY} maxResult={maxResult} minResult={minResult} array={array}/>\n  </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    leetcode: (array) => {\n      dispatch(leetcode(array))\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    array: state.input.array,\n    maxX: state.chart.maxX,\n    maxY: state.chart.maxY,\n    minY: state.chart.minY,\n    maxResult: state.input.maxNum,\n    minResult: state.input.minNum,\n    total: state.input.result,\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart);","const Explain = ({minResult, maxResult, array, total, distance}) => {\n  return (\n    <>\n    <div>\n      <h1>Answer</h1>\n      <div>\n      {minResult > -1 ? \n      <div><p>The two walls are a[{minResult}]({array[minResult]}), and a[{maxResult}]({array[maxResult]}),\n        the reason being is that the product of the lowest\n        wall with the distance ({distance}) between the two walls outputs\n      a total of {total}.</p>\n      <h4> {array[minResult]} x {distance} = {total}</h4>\n      </div> :\n      <p>There is no answer because there aren't enough walls!</p>\n      }\n      </div>\n    </div>\n    </>\n  )\n}\n\nexport default Explain;","import './App.css';\nimport InputWater from \"./components/InputWater/InputWater\";\nimport { connect } from \"react-redux\";\nimport Chart from \"./components/Chart/Chart\";\nimport Explain from \"./components/Explain/Explain\"\n\n\nconst Container = ({total, maxResult, minResult, array, distance}) => {\n  return (\n    <div className=\"App\">\n      <h1>Which two walls can hold the most water?</h1>\n      <Chart/>\n      <div><p>Enter a valid sequence of numbers separated by spaces</p><InputWater/></div>\n      {total && <Explain maxResult={maxResult} minResult={minResult} total={total} distance={distance} array={array}/>}\n    </div>\n  )\n}\nconst mapStateToProps = (state) => {\n  return {\n    array: state.input.array,\n    maxResult: state.input.maxNum,\n    minResult: state.input.minNum,\n    total: state.input.result,\n    distance: state.input.distance,\n  }\n}\n\nexport default connect(mapStateToProps)(Container);","import InputWater from \"./components/InputWater/InputWater\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Container from \"./Container\"\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Container/>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}